# -------------------------------------------------------------------------------------------------
                    #      Analysis on Evoked Power
                    # -------------------------------------------------------------------------------------------------

                    """B1 = de[trni, :]  # training data
                    B2 = de[tsti, :]  # test data
                    C1 = c[trni, :]  # predicted channel outputs for training data
                    W = np.linalg.lstsq(C1, B1, rcond=None)[0]  # estimate weight matrix
                    
                    C2 = np.linalg.lstsq(W.conj().transpose(), B2.conj().transpose(), rcond=None)[0].conj().transpose()# estimate channel responses
                    # Data from B1: 16 x 20; B2: 8 x 20; C1: 16 x 8; W: 8 x 20;

                    C2_evoked[f, iter, samp, i, :, :] = C2  # save the unshifted channel responses

                    # shift eegs to common center
                    n2shift = int(np.ceil(C2.shape[1] / 2))
                    for ii in range(1, C2.shape[0] + 1):
                        shiftInd = np.argmin(abs(posBins - tstl[ii - 1])[0]) + 1
                        C2[ii - 1, :] = np.roll(C2[ii - 1, :], shiftInd - n2shift - 1)

                    tf_evoked[f, iter, samp, i, :] = np.mean(C2, axis=0)  # average shifted channel responses"""